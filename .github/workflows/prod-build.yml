name: Build with PyInstaller

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest  # This runs the Windows build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          python -v
          python -m pip install --upgrade pip --no-build-isolation
          python -m pip install -r requirements.txt --no-build-isolation

      - name: Install PyInstaller
        run: |
          python -m pip install pyinstaller --no-build-isolation

      - name: Get version from manifest.ini
        id: version
        run: |
          $version = (Get-Content manifest.ini | Select-String -Pattern 'Version' | ForEach-Object { $_.ToString().Split('=')[1].Trim() })
          Write-Host "Version found in manifest.ini: $version"
          Write-Output "##vso[task.setvariable variable=version;isOutput=true]$version"

      - name: Build with PyInstaller (Windows)
        run: |
          # Get version from manifest.ini
          $version = (Get-Content manifest.ini | Select-String -Pattern 'Version' | ForEach-Object { $_.ToString().Split('=')[1].Trim() })
          Write-Host "Version found in manifest.ini: $version"
          Write-Output "##vso[task.setvariable variable=version;isOutput=true]$version"

          # Determine output_name based on version
          $output_name = "payg-$($version).exe"
          
          python -m PyInstaller --onedir --icon=logo.ico --add-data "manifest.ini:." --add-data "logo.ico:." --name $output_name --strip launch.py

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: payg-windows-artifacts
          path: dist/payg-*.exe

  build_mac:
    runs-on: macos-latest  # This runs the macOS build
    needs: build  # Ensures that macOS build starts only after the Windows build finishes
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          python -v
          python -m pip install --upgrade pip --no-build-isolation
          python -m pip install -r requirements.txt --no-build-isolation

      - name: Install PyInstaller
        run: |
          python -m pip install pyinstaller --no-build-isolation

      - name: Get version from manifest.ini
        id: version
        run: |
          $version = (Get-Content manifest.ini | Select-String -Pattern 'Version' | ForEach-Object { $_.ToString().Split('=')[1].Trim() })
          Write-Host "Version found in manifest.ini: $version"
          Write-Output "##vso[task.setvariable variable=version;isOutput=true]$version"

      - name: Build with PyInstaller (macOS)
        run: |
          # Get version from manifest.ini
          $version = (Get-Content manifest.ini | Select-String -Pattern 'Version' | ForEach-Object { $_.ToString().Split('=')[1].Trim() })
          Write-Host "Version found in manifest.ini: $version"
          Write-Output "##vso[task.setvariable variable=version;isOutput=true]$version"

          # Determine output_name based on version
          $output_name = "payg-$($version).app"
          
          python -m PyInstaller --onedir --icon=logo.icns --add-data "manifest.ini:." --add-data "logo.ico:." --name $output_name --strip launch.py

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: payg-macos-artifacts
          path: dist/payg-*.app
