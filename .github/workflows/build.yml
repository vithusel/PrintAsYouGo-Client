name: Build with PyInstaller

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 16

    - name: Install dependencies
      run: |
        python -v
        python -m pip install --upgrade pip --no-build-isolation
        python -m pip install -r requirements.txt --no-build-isolation

    - name: Install PyInstaller
      run: |
        python -m pip install pyinstaller --no-build-isolation

    - name: Get version from manifest.ini
      id: version
      run: |
        $version = (Get-Content manifest.ini | Select-String -Pattern 'Version' | ForEach-Object { $_.ToString().Split('=')[1].Trim() })
        Write-Host "Version found in manifest.ini: $version"
        Write-Output "##vso[task.setvariable variable=version;isOutput=true]$version"

    - name: Build with PyInstaller
      run: |
        # Get version from manifest.ini
        $version = (Get-Content manifest.ini | Select-String -Pattern 'Version' | ForEach-Object { $_.ToString().Split('=')[1].Trim() })
        Write-Host "Version found in manifest.ini: $version"
        Write-Output "##vso[task.setvariable variable=version;isOutput=true]$version"

        # Determine output_name based on branch
        $output_name = "payg-$($version).exe"

        python -m PyInstaller --onefile --noconsole --icon=logo.ico --add-data "manifest.ini:." --add-data "logo.ico:." --name $output_name launch.py

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: payg-artifacts  # Specify a name for the artifact
        path: dist/payg-*.exe  # Use a wildcard to match files with the pattern

